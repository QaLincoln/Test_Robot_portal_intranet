<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.3 on win32)" generated="20231204 17:09:14.977" rpa="false" schemaversion="4">
<suite id="s1" name="Teste Cadastro Clientes" source="C:\Users\quems\Desktop\Fixpay_projetos_atualizados\portal-intranet\test_robot_framework\teste_cadastro_clientes.robot">
<test id="s1-t1" name="Caso de Teste 1: Testando todos os filtros: Filtro por ID" line="11">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231204 17:09:15.203" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231204 17:09:15.203" endtime="20231204 17:09:23.610"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231204 17:09:23.610" endtime="20231204 17:09:23.619"/>
</kw>
<status status="PASS" starttime="20231204 17:09:15.203" endtime="20231204 17:09:23.619"/>
</kw>
<kw name="Executar comando antes do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:23.648" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:23.624" endtime="20231204 17:09:23.769"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.624" endtime="20231204 17:09:23.769"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:23.769" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231204 17:09:23.782" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:23.769" endtime="20231204 17:09:23.782"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.624" endtime="20231204 17:09:23.782"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:23.782" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:23.782" endtime="20231204 17:09:23.860"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.782" endtime="20231204 17:09:23.860"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:23.860" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231204 17:09:23.860" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:23.860" endtime="20231204 17:09:23.860"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.782" endtime="20231204 17:09:23.860"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:23.860" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:23.860" endtime="20231204 17:09:23.948"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.860" endtime="20231204 17:09:23.948"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:23.948" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231204 17:09:23.948" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:23.948" endtime="20231204 17:09:23.948"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.860" endtime="20231204 17:09:23.948"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:23.948" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:23.948" endtime="20231204 17:09:24.067"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.948" endtime="20231204 17:09:24.067"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:24.067" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231204 17:09:24.074" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:24.067" endtime="20231204 17:09:24.074"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.948" endtime="20231204 17:09:24.074"/>
</kw>
<kw name="Quando inserir Dados na tabela clientes" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:24.074" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:24.074" endtime="20231204 17:09:24.179"/>
</kw>
<status status="PASS" starttime="20231204 17:09:24.074" endtime="20231204 17:09:24.179"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:24.179" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231204 17:09:24.188" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:24.179" endtime="20231204 17:09:24.188"/>
</kw>
<status status="PASS" starttime="20231204 17:09:24.074" endtime="20231204 17:09:24.188"/>
</kw>
<kw name="Quando inserir dados na tabela partners" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:24.190" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:24.188" endtime="20231204 17:09:24.271"/>
</kw>
<status status="PASS" starttime="20231204 17:09:24.188" endtime="20231204 17:09:24.271"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:24.271" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072'); </msg>
<msg timestamp="20231204 17:09:24.274" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:24.271" endtime="20231204 17:09:24.274"/>
</kw>
<status status="PASS" starttime="20231204 17:09:24.188" endtime="20231204 17:09:24.274"/>
</kw>
<kw name="Quando inserir tabela partner_clients" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:24.274" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:24.274" endtime="20231204 17:09:24.359"/>
</kw>
<status status="PASS" starttime="20231204 17:09:24.274" endtime="20231204 17:09:24.359"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:24.359" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true'); </msg>
<msg timestamp="20231204 17:09:24.364" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:24.359" endtime="20231204 17:09:24.364"/>
</kw>
<status status="PASS" starttime="20231204 17:09:24.274" endtime="20231204 17:09:24.364"/>
</kw>
<status status="PASS" starttime="20231204 17:09:23.619" endtime="20231204 17:09:24.364"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231204 17:09:24.365" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231204 17:09:24.365" endtime="20231204 17:09:26.796"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231204 17:09:28.798" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231204 17:09:26.797" endtime="20231204 17:09:28.798"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:28.798" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231204 17:09:28.798" endtime="20231204 17:09:28.913"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:28.913" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231204 17:09:28.913" endtime="20231204 17:09:28.928"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:28.928" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231204 17:09:28.928" endtime="20231204 17:09:29.180"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231204 17:09:29.180" endtime="20231204 17:09:29.528"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231204 17:09:31.529" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231204 17:09:29.529" endtime="20231204 17:09:31.529"/>
</kw>
<status status="PASS" starttime="20231204 17:09:24.364" endtime="20231204 17:09:31.529"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:31.531" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231204 17:09:31.530" endtime="20231204 17:09:31.761"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:31.762" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231204 17:09:31.761" endtime="20231204 17:09:32.032"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231204 17:09:32.032" endtime="20231204 17:09:32.077"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:32.078" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231204 17:09:32.078" endtime="20231204 17:09:32.377"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231204 17:09:32.377" endtime="20231204 17:09:33.055"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231204 17:09:33.055" endtime="20231204 17:09:33.058"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231204 17:09:35.059" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231204 17:09:33.058" endtime="20231204 17:09:35.059"/>
</kw>
<status status="PASS" starttime="20231204 17:09:31.530" endtime="20231204 17:09:35.059"/>
</kw>
<kw name="E deve consegui filtrar por id" library="resourcer_cadastro_clientes">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//span[@class='h2 d-block mb-0 titulo'][contains(.,'Clientes')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231204 17:09:35.062" endtime="20231204 17:09:35.111"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=${CAMPO_ID}</arg>
<arg>text=50000</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:35.111" level="INFO">Typing text '50000' into text field '//input[contains(@placeholder,'INFORME O ID')]'.</msg>
<status status="PASS" starttime="20231204 17:09:35.111" endtime="20231204 17:09:35.174"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:35.174" level="INFO">Clicking element '//button[contains(.,'Filtrar')]'.</msg>
<status status="PASS" starttime="20231204 17:09:35.174" endtime="20231204 17:09:35.422"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=50000</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231204 17:09:35.422" endtime="20231204 17:09:35.477"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231204 17:09:35.477" level="INFO">Clicking element '//button[contains(.,'Limpar')]'.</msg>
<status status="PASS" starttime="20231204 17:09:35.477" endtime="20231204 17:09:38.341"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231204 17:09:40.341" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231204 17:09:38.341" endtime="20231204 17:09:40.341"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//td[contains(.,'TesteLincoln')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231204 17:09:40.341" endtime="20231204 17:09:40.381"/>
</kw>
<status status="PASS" starttime="20231204 17:09:35.061" endtime="20231204 17:09:40.381"/>
</kw>
<kw name="Executar comando depois do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:40.384" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:40.383" endtime="20231204 17:09:40.465"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.383" endtime="20231204 17:09:40.465"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:40.465" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231204 17:09:40.468" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:40.465" endtime="20231204 17:09:40.468"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.383" endtime="20231204 17:09:40.468"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:40.469" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:40.468" endtime="20231204 17:09:40.538"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.468" endtime="20231204 17:09:40.538"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:40.538" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231204 17:09:40.542" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:40.538" endtime="20231204 17:09:40.542"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.468" endtime="20231204 17:09:40.542"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231204 17:09:40.543" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231204 17:09:40.542" endtime="20231204 17:09:40.609"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.542" endtime="20231204 17:09:40.609"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231204 17:09:40.610" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231204 17:09:40.640" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231204 17:09:40.610" endtime="20231204 17:09:40.640"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.542" endtime="20231204 17:09:40.640"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.383" endtime="20231204 17:09:40.640"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231204 17:09:40.640" endtime="20231204 17:09:43.972"/>
</kw>
<status status="PASS" starttime="20231204 17:09:40.640" endtime="20231204 17:09:43.972"/>
</kw>
<doc>Tela cadastro</doc>
<tag>id</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231204 17:09:15.203" endtime="20231204 17:09:43.972"/>
</test>
<status status="PASS" starttime="20231204 17:09:14.977" endtime="20231204 17:09:43.974"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">id</stat>
<stat pass="1" fail="0" skip="0">todos_cadastro_Clientes</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Teste Cadastro Clientes">Teste Cadastro Clientes</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
