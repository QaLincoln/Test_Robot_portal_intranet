<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.3 on win32)" generated="20231201 15:49:52.500" rpa="false" schemaversion="4">
<suite id="s1" name="Teste Cadastro Clientes" source="C:\Users\quems\Desktop\Fixpay_projetos_atualizados\portal-intranet\test_robot_framework\teste_cadastro_clientes.robot">
<test id="s1-t1" name="Caso de Teste 1: Testando todos os filtros: Filtro por ID" line="13">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:49:52.822" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:49:52.822" endtime="20231201 15:50:01.145"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:50:01.146" endtime="20231201 15:50:01.149"/>
</kw>
<status status="PASS" starttime="20231201 15:49:52.822" endtime="20231201 15:50:01.149"/>
</kw>
<kw name="Executar comando antes do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:01.169" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:01.149" endtime="20231201 15:50:01.258"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.149" endtime="20231201 15:50:01.258"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:01.258" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:50:01.258" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:01.258" endtime="20231201 15:50:01.258"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.149" endtime="20231201 15:50:01.258"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:01.258" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:01.258" endtime="20231201 15:50:01.456"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.258" endtime="20231201 15:50:01.456"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:01.462" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:50:01.469" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:01.456" endtime="20231201 15:50:01.469"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.258" endtime="20231201 15:50:01.469"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:01.469" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:01.469" endtime="20231201 15:50:01.669"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.469" endtime="20231201 15:50:01.669"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:01.669" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:50:01.689" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:01.669" endtime="20231201 15:50:01.689"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.469" endtime="20231201 15:50:01.689"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:01.689" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:01.689" endtime="20231201 15:50:01.762"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.689" endtime="20231201 15:50:01.762"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:01.762" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:50:01.773" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:01.762" endtime="20231201 15:50:01.773"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.689" endtime="20231201 15:50:01.773"/>
</kw>
<kw name="Quando inserir Dados na tabela clientes" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:01.773" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:01.773" endtime="20231201 15:50:01.841"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.773" endtime="20231201 15:50:01.841"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:01.841" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231201 15:50:01.847" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:01.841" endtime="20231201 15:50:01.847"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.773" endtime="20231201 15:50:01.847"/>
</kw>
<kw name="Quando inserir dados na tabela partners" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:01.852" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:01.852" endtime="20231201 15:50:01.924"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.847" endtime="20231201 15:50:01.924"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:01.924" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072'); </msg>
<msg timestamp="20231201 15:50:01.924" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:01.924" endtime="20231201 15:50:01.924"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.847" endtime="20231201 15:50:01.924"/>
</kw>
<kw name="Quando inserir tabela partner_clients" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:01.924" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:01.924" endtime="20231201 15:50:02.000"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.924" endtime="20231201 15:50:02.000"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:02.000" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true'); </msg>
<msg timestamp="20231201 15:50:02.006" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:02.000" endtime="20231201 15:50:02.006"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.924" endtime="20231201 15:50:02.006"/>
</kw>
<status status="PASS" starttime="20231201 15:50:01.149" endtime="20231201 15:50:02.006"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:50:02.006" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:50:02.006" endtime="20231201 15:50:04.500"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:06.502" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:04.500" endtime="20231201 15:50:06.502"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:06.502" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:50:06.502" endtime="20231201 15:50:06.654"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:06.654" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:50:06.654" endtime="20231201 15:50:06.695"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:06.695" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:50:06.695" endtime="20231201 15:50:06.957"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:50:06.957" endtime="20231201 15:50:07.321"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:09.322" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:07.321" endtime="20231201 15:50:09.322"/>
</kw>
<status status="PASS" starttime="20231201 15:50:02.006" endtime="20231201 15:50:09.322"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:09.325" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:50:09.322" endtime="20231201 15:50:09.555"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:09.555" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:50:09.555" endtime="20231201 15:50:09.818"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:50:09.818" endtime="20231201 15:50:09.849"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:09.850" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:50:09.849" endtime="20231201 15:50:10.145"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:50:10.145" endtime="20231201 15:50:10.772"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:50:10.776" endtime="20231201 15:50:10.777"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:12.777" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:10.777" endtime="20231201 15:50:12.777"/>
</kw>
<status status="PASS" starttime="20231201 15:50:09.322" endtime="20231201 15:50:12.777"/>
</kw>
<kw name="E deve consegui filtrar por id" library="resourcer_cadastro_clientes">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//span[@class='h2 d-block mb-0 titulo'][contains(.,'Clientes')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:50:12.777" endtime="20231201 15:50:12.801"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=${CAMPO_ID}</arg>
<arg>text=50000</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:12.802" level="INFO">Typing text '50000' into text field '//input[contains(@placeholder,'INFORME O ID')]'.</msg>
<status status="PASS" starttime="20231201 15:50:12.801" endtime="20231201 15:50:12.867"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:12.869" level="INFO">Clicking element '//button[contains(.,'Filtrar')]'.</msg>
<status status="PASS" starttime="20231201 15:50:12.867" endtime="20231201 15:50:13.115"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=50000</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:50:13.115" endtime="20231201 15:50:13.161"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:13.161" level="INFO">Clicking element '//button[contains(.,'Limpar')]'.</msg>
<status status="PASS" starttime="20231201 15:50:13.161" endtime="20231201 15:50:14.944"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:16.945" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:14.944" endtime="20231201 15:50:16.945"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//td[contains(.,'TesteLincoln')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:50:16.945" endtime="20231201 15:50:16.994"/>
</kw>
<status status="PASS" starttime="20231201 15:50:12.777" endtime="20231201 15:50:16.994"/>
</kw>
<kw name="Executar comando depois do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:16.998" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:16.998" endtime="20231201 15:50:17.112"/>
</kw>
<status status="PASS" starttime="20231201 15:50:16.994" endtime="20231201 15:50:17.112"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:17.112" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:50:17.116" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:17.112" endtime="20231201 15:50:17.116"/>
</kw>
<status status="PASS" starttime="20231201 15:50:16.994" endtime="20231201 15:50:17.116"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:17.116" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:17.116" endtime="20231201 15:50:17.186"/>
</kw>
<status status="PASS" starttime="20231201 15:50:17.116" endtime="20231201 15:50:17.186"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:17.186" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:50:17.192" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:17.186" endtime="20231201 15:50:17.192"/>
</kw>
<status status="PASS" starttime="20231201 15:50:17.116" endtime="20231201 15:50:17.192"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:17.192" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:17.192" endtime="20231201 15:50:17.254"/>
</kw>
<status status="PASS" starttime="20231201 15:50:17.192" endtime="20231201 15:50:17.254"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:17.258" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:50:17.276" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:17.258" endtime="20231201 15:50:17.276"/>
</kw>
<status status="PASS" starttime="20231201 15:50:17.192" endtime="20231201 15:50:17.276"/>
</kw>
<status status="PASS" starttime="20231201 15:50:16.994" endtime="20231201 15:50:17.276"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:50:17.278" endtime="20231201 15:50:20.628"/>
</kw>
<status status="PASS" starttime="20231201 15:50:17.276" endtime="20231201 15:50:20.629"/>
</kw>
<doc>Tela cadastro</doc>
<tag>id</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231201 15:49:52.822" endtime="20231201 15:50:20.629"/>
</test>
<test id="s1-t2" name="Caso de Teste 2: Testando todos os filtros: Filtro por Clientes" line="22">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:50:20.633" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:50:20.633" endtime="20231201 15:50:29.255"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:50:29.255" endtime="20231201 15:50:29.258"/>
</kw>
<status status="PASS" starttime="20231201 15:50:20.633" endtime="20231201 15:50:29.258"/>
</kw>
<kw name="Executar comando antes do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:29.260" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:29.258" endtime="20231201 15:50:29.342"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.258" endtime="20231201 15:50:29.342"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:29.342" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:50:29.354" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:29.342" endtime="20231201 15:50:29.354"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.258" endtime="20231201 15:50:29.354"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:29.371" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:29.354" endtime="20231201 15:50:29.436"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.354" endtime="20231201 15:50:29.440"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:29.440" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:50:29.442" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:29.440" endtime="20231201 15:50:29.442"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.354" endtime="20231201 15:50:29.442"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:29.442" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:29.442" endtime="20231201 15:50:29.516"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.442" endtime="20231201 15:50:29.516"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:29.516" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:50:29.516" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:29.516" endtime="20231201 15:50:29.516"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.442" endtime="20231201 15:50:29.516"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:29.516" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:29.516" endtime="20231201 15:50:29.590"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.516" endtime="20231201 15:50:29.590"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:29.590" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:50:29.592" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:29.590" endtime="20231201 15:50:29.592"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.516" endtime="20231201 15:50:29.592"/>
</kw>
<kw name="Quando inserir Dados na tabela clientes" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:29.594" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:29.594" endtime="20231201 15:50:29.671"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.594" endtime="20231201 15:50:29.671"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:29.671" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231201 15:50:29.677" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:29.671" endtime="20231201 15:50:29.677"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.592" endtime="20231201 15:50:29.677"/>
</kw>
<kw name="Quando inserir dados na tabela partners" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:29.679" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:29.679" endtime="20231201 15:50:29.753"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.677" endtime="20231201 15:50:29.753"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:29.753" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072'); </msg>
<msg timestamp="20231201 15:50:29.759" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:29.753" endtime="20231201 15:50:29.759"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.677" endtime="20231201 15:50:29.759"/>
</kw>
<kw name="Quando inserir tabela partner_clients" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:29.759" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:29.759" endtime="20231201 15:50:29.817"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.759" endtime="20231201 15:50:29.817"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:29.817" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true'); </msg>
<msg timestamp="20231201 15:50:29.833" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:29.817" endtime="20231201 15:50:29.833"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.759" endtime="20231201 15:50:29.833"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.258" endtime="20231201 15:50:29.833"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:50:29.837" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:50:29.833" endtime="20231201 15:50:34.465"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:36.465" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:34.465" endtime="20231201 15:50:36.465"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:36.465" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:50:36.465" endtime="20231201 15:50:36.558"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:36.558" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:50:36.558" endtime="20231201 15:50:36.579"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:36.580" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:50:36.579" endtime="20231201 15:50:36.817"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:50:36.817" endtime="20231201 15:50:37.145"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:39.146" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:37.145" endtime="20231201 15:50:39.146"/>
</kw>
<status status="PASS" starttime="20231201 15:50:29.833" endtime="20231201 15:50:39.146"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:39.146" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:50:39.146" endtime="20231201 15:50:39.403"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:39.403" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:50:39.403" endtime="20231201 15:50:39.673"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:50:39.673" endtime="20231201 15:50:39.699"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:39.699" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:50:39.699" endtime="20231201 15:50:39.999"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:50:39.999" endtime="20231201 15:50:40.617"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:50:40.617" endtime="20231201 15:50:40.619"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:42.620" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:40.619" endtime="20231201 15:50:42.620"/>
</kw>
<status status="PASS" starttime="20231201 15:50:39.146" endtime="20231201 15:50:42.620"/>
</kw>
<kw name="E deve consegui filtrar por cliente" library="resourcer_cadastro_clientes">
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:44.621" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:42.620" endtime="20231201 15:50:44.621"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${CAMPO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:44.621" level="INFO">Clicking element '//input[@aria-placeholder='SELECIONE O CLIENTE']'.</msg>
<status status="PASS" starttime="20231201 15:50:44.621" endtime="20231201 15:50:45.167"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//li[contains(.,'TesteLincoln')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:50:45.171" endtime="20231201 15:50:45.224"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//li[contains(.,'TesteLincoln')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:45.224" level="INFO">Clicking element '//li[contains(.,'TesteLincoln')]'.</msg>
<status status="PASS" starttime="20231201 15:50:45.224" endtime="20231201 15:50:45.668"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:45.668" level="INFO">Clicking element '//button[contains(.,'Filtrar')]'.</msg>
<status status="PASS" starttime="20231201 15:50:45.668" endtime="20231201 15:50:46.114"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:50:48.115" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:50:46.114" endtime="20231201 15:50:48.115"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>//span[contains(.,'TesteLincoln')]</arg>
<arg>TESTELINCOLN</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20231201 15:50:48.116" level="INFO">Verifying element '//span[contains(.,'TesteLincoln')]' contains exact text 'TESTELINCOLN'.</msg>
<status status="PASS" starttime="20231201 15:50:48.115" endtime="20231201 15:50:48.161"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:50:48.161" level="INFO">Clicking element '//button[contains(.,'Limpar')]'.</msg>
<status status="PASS" starttime="20231201 15:50:48.161" endtime="20231201 15:50:49.474"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=(//span[contains(.,'326.070.338-21')])[2]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:50:49.475" endtime="20231201 15:50:50.362"/>
</kw>
<status status="PASS" starttime="20231201 15:50:42.620" endtime="20231201 15:50:50.362"/>
</kw>
<kw name="Executar comando depois do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:50.365" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:50.364" endtime="20231201 15:50:50.456"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.364" endtime="20231201 15:50:50.456"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:50.456" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:50:50.459" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:50.456" endtime="20231201 15:50:50.459"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.364" endtime="20231201 15:50:50.459"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:50.460" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:50.459" endtime="20231201 15:50:50.537"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.459" endtime="20231201 15:50:50.537"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:50.538" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:50:50.542" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:50.537" endtime="20231201 15:50:50.542"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.459" endtime="20231201 15:50:50.542"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:50:50.544" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:50:50.543" endtime="20231201 15:50:50.616"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.543" endtime="20231201 15:50:50.616"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:50:50.618" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:50:50.640" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:50:50.618" endtime="20231201 15:50:50.640"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.542" endtime="20231201 15:50:50.640"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.364" endtime="20231201 15:50:50.640"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:50:50.640" endtime="20231201 15:50:54.116"/>
</kw>
<status status="PASS" starttime="20231201 15:50:50.640" endtime="20231201 15:50:54.116"/>
</kw>
<doc>Tela cadastro</doc>
<tag>clientes</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231201 15:50:20.632" endtime="20231201 15:50:54.116"/>
</test>
<test id="s1-t3" name="Caso de Teste 3: Testando todos os filtros: Filtro por CPF" line="31">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:50:54.123" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:50:54.123" endtime="20231201 15:51:02.634"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:51:02.634" endtime="20231201 15:51:02.634"/>
</kw>
<status status="PASS" starttime="20231201 15:50:54.122" endtime="20231201 15:51:02.634"/>
</kw>
<kw name="Executar comando antes do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:02.642" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:02.642" endtime="20231201 15:51:02.738"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.642" endtime="20231201 15:51:02.738"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:02.738" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:51:02.741" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:02.738" endtime="20231201 15:51:02.741"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.642" endtime="20231201 15:51:02.741"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:02.741" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:02.741" endtime="20231201 15:51:02.807"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.741" endtime="20231201 15:51:02.807"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:02.807" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:51:02.812" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:02.807" endtime="20231201 15:51:02.812"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.741" endtime="20231201 15:51:02.812"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:02.812" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:02.812" endtime="20231201 15:51:02.881"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.812" endtime="20231201 15:51:02.881"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:02.881" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:51:02.892" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:02.881" endtime="20231201 15:51:02.892"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.812" endtime="20231201 15:51:02.892"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:02.892" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:02.892" endtime="20231201 15:51:02.970"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.892" endtime="20231201 15:51:02.970"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:02.970" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:51:02.975" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:02.970" endtime="20231201 15:51:02.975"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.892" endtime="20231201 15:51:02.975"/>
</kw>
<kw name="Quando inserir Dados na tabela clientes" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:02.977" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:02.976" endtime="20231201 15:51:03.049"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.975" endtime="20231201 15:51:03.049"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:03.049" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231201 15:51:03.055" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:03.049" endtime="20231201 15:51:03.055"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.975" endtime="20231201 15:51:03.055"/>
</kw>
<kw name="Quando inserir dados na tabela partners" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:03.057" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:03.057" endtime="20231201 15:51:03.131"/>
</kw>
<status status="PASS" starttime="20231201 15:51:03.057" endtime="20231201 15:51:03.131"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:03.132" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072'); </msg>
<msg timestamp="20231201 15:51:03.134" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:03.131" endtime="20231201 15:51:03.134"/>
</kw>
<status status="PASS" starttime="20231201 15:51:03.055" endtime="20231201 15:51:03.134"/>
</kw>
<kw name="Quando inserir tabela partner_clients" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:03.135" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:03.135" endtime="20231201 15:51:03.318"/>
</kw>
<status status="PASS" starttime="20231201 15:51:03.135" endtime="20231201 15:51:03.318"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:03.318" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true'); </msg>
<msg timestamp="20231201 15:51:03.323" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:03.318" endtime="20231201 15:51:03.323"/>
</kw>
<status status="PASS" starttime="20231201 15:51:03.134" endtime="20231201 15:51:03.323"/>
</kw>
<status status="PASS" starttime="20231201 15:51:02.634" endtime="20231201 15:51:03.323"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:51:03.323" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:51:03.323" endtime="20231201 15:51:05.852"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:07.854" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:05.853" endtime="20231201 15:51:07.854"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:07.856" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:51:07.854" endtime="20231201 15:51:07.967"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:07.967" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:51:07.967" endtime="20231201 15:51:07.984"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:07.984" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:51:07.984" endtime="20231201 15:51:08.215"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:51:08.215" endtime="20231201 15:51:08.553"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:10.554" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:08.553" endtime="20231201 15:51:10.554"/>
</kw>
<status status="PASS" starttime="20231201 15:51:03.323" endtime="20231201 15:51:10.554"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:10.557" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:51:10.556" endtime="20231201 15:51:10.793"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:10.794" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:51:10.794" endtime="20231201 15:51:11.065"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:51:11.065" endtime="20231201 15:51:11.087"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:11.088" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:51:11.087" endtime="20231201 15:51:11.373"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:51:11.373" endtime="20231201 15:51:12.003"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:51:12.003" endtime="20231201 15:51:12.006"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:14.007" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:12.006" endtime="20231201 15:51:14.007"/>
</kw>
<status status="PASS" starttime="20231201 15:51:10.554" endtime="20231201 15:51:14.007"/>
</kw>
<kw name="E deve consegui filtrar por cpf" library="resourcer_cadastro_clientes">
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:16.011" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:14.010" endtime="20231201 15:51:16.011"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=${CAMPO_CPF}</arg>
<arg>text=326.070.338-21</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:16.014" level="INFO">Typing text '326.070.338-21' into text field '//input[contains(@aria-placeholder,'Selecione o CPF')]'.</msg>
<status status="PASS" starttime="20231201 15:51:16.011" endtime="20231201 15:51:16.699"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=(//span[contains(.,'326.070.338-21')])[2]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:16.701" level="INFO">Clicking element '(//span[contains(.,'326.070.338-21')])[2]'.</msg>
<status status="PASS" starttime="20231201 15:51:16.699" endtime="20231201 15:51:16.931"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:16.931" level="INFO">Clicking element '//button[contains(.,'Filtrar')]'.</msg>
<status status="PASS" starttime="20231201 15:51:16.931" endtime="20231201 15:51:17.176"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=326.070.338-21</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:51:17.176" endtime="20231201 15:51:17.215"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>//td[contains(.,'TesteLincoln')]</arg>
<arg>TESTELINCOLN</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20231201 15:51:17.216" level="INFO">Verifying element '//td[contains(.,'TesteLincoln')]' contains exact text 'TESTELINCOLN'.</msg>
<status status="PASS" starttime="20231201 15:51:17.215" endtime="20231201 15:51:17.236"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:17.238" level="INFO">Clicking element '//button[contains(.,'Limpar')]'.</msg>
<status status="PASS" starttime="20231201 15:51:17.236" endtime="20231201 15:51:18.518"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//td[contains(.,'TesteLincoln')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:51:18.519" endtime="20231201 15:51:19.506"/>
</kw>
<status status="PASS" starttime="20231201 15:51:14.009" endtime="20231201 15:51:19.506"/>
</kw>
<kw name="Executar comando depois do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:19.510" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:19.510" endtime="20231201 15:51:19.633"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.506" endtime="20231201 15:51:19.633"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:19.635" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:51:19.639" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:19.635" endtime="20231201 15:51:19.639"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.506" endtime="20231201 15:51:19.639"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:19.639" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:19.639" endtime="20231201 15:51:19.741"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.639" endtime="20231201 15:51:19.741"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:19.741" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:51:19.747" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:19.741" endtime="20231201 15:51:19.747"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.639" endtime="20231201 15:51:19.747"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:19.747" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:19.747" endtime="20231201 15:51:19.852"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.747" endtime="20231201 15:51:19.852"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:19.852" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:51:19.890" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:19.852" endtime="20231201 15:51:19.890"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.747" endtime="20231201 15:51:19.890"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.506" endtime="20231201 15:51:19.892"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:51:19.892" endtime="20231201 15:51:23.277"/>
</kw>
<status status="PASS" starttime="20231201 15:51:19.892" endtime="20231201 15:51:23.277"/>
</kw>
<doc>Tela cadastro</doc>
<tag>cpf</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231201 15:50:54.116" endtime="20231201 15:51:23.277"/>
</test>
<test id="s1-t4" name="Caso de Teste 4: Testando todos os filtros: Filtro por Status" line="40">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:51:23.277" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:51:23.277" endtime="20231201 15:51:31.852"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:51:31.852" endtime="20231201 15:51:31.852"/>
</kw>
<status status="PASS" starttime="20231201 15:51:23.277" endtime="20231201 15:51:31.857"/>
</kw>
<kw name="Executar comando antes do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:31.858" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:31.857" endtime="20231201 15:51:31.942"/>
</kw>
<status status="PASS" starttime="20231201 15:51:31.857" endtime="20231201 15:51:31.942"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:31.942" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:51:31.955" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:31.942" endtime="20231201 15:51:31.955"/>
</kw>
<status status="PASS" starttime="20231201 15:51:31.857" endtime="20231201 15:51:31.955"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:31.956" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:31.956" endtime="20231201 15:51:32.058"/>
</kw>
<status status="PASS" starttime="20231201 15:51:31.956" endtime="20231201 15:51:32.058"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:32.058" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:51:32.062" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:32.058" endtime="20231201 15:51:32.062"/>
</kw>
<status status="PASS" starttime="20231201 15:51:31.955" endtime="20231201 15:51:32.062"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:32.062" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:32.062" endtime="20231201 15:51:32.133"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.062" endtime="20231201 15:51:32.134"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:32.134" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:51:32.135" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:32.134" endtime="20231201 15:51:32.135"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.062" endtime="20231201 15:51:32.135"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:32.135" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:32.135" endtime="20231201 15:51:32.200"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.135" endtime="20231201 15:51:32.200"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:32.200" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:51:32.200" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:32.200" endtime="20231201 15:51:32.200"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.135" endtime="20231201 15:51:32.200"/>
</kw>
<kw name="Quando inserir Dados na tabela clientes" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:32.200" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:32.200" endtime="20231201 15:51:32.273"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.200" endtime="20231201 15:51:32.273"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:32.273" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231201 15:51:32.277" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:32.273" endtime="20231201 15:51:32.277"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.200" endtime="20231201 15:51:32.277"/>
</kw>
<kw name="Quando inserir dados na tabela partners" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:32.277" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:32.277" endtime="20231201 15:51:32.358"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.277" endtime="20231201 15:51:32.358"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:32.358" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072'); </msg>
<msg timestamp="20231201 15:51:32.358" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:32.358" endtime="20231201 15:51:32.358"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.277" endtime="20231201 15:51:32.358"/>
</kw>
<kw name="Quando inserir tabela partner_clients" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:32.358" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:32.358" endtime="20231201 15:51:32.434"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.358" endtime="20231201 15:51:32.434"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:32.436" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true'); </msg>
<msg timestamp="20231201 15:51:32.440" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:32.436" endtime="20231201 15:51:32.440"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.358" endtime="20231201 15:51:32.440"/>
</kw>
<status status="PASS" starttime="20231201 15:51:31.857" endtime="20231201 15:51:32.440"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:51:32.440" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:51:32.440" endtime="20231201 15:51:35.116"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:37.116" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:35.116" endtime="20231201 15:51:37.116"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:37.117" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:51:37.116" endtime="20231201 15:51:37.360"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:37.364" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:51:37.363" endtime="20231201 15:51:37.398"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:37.398" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:51:37.398" endtime="20231201 15:51:37.632"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:51:37.632" endtime="20231201 15:51:37.934"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:39.934" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:37.934" endtime="20231201 15:51:39.934"/>
</kw>
<status status="PASS" starttime="20231201 15:51:32.440" endtime="20231201 15:51:39.934"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:39.935" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:51:39.935" endtime="20231201 15:51:40.159"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:40.162" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:51:40.159" endtime="20231201 15:51:40.445"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:51:40.445" endtime="20231201 15:51:40.467"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:40.467" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:51:40.467" endtime="20231201 15:51:40.772"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:51:40.772" endtime="20231201 15:51:41.399"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:51:41.399" endtime="20231201 15:51:41.403"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:43.404" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:41.403" endtime="20231201 15:51:43.404"/>
</kw>
<status status="PASS" starttime="20231201 15:51:39.934" endtime="20231201 15:51:43.404"/>
</kw>
<kw name="E deve consegui filtrar por status" library="resourcer_cadastro_clientes">
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:45.406" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:51:43.405" endtime="20231201 15:51:45.406"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${CAMPO_STATUS}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:45.409" level="INFO">Clicking element '//input[contains(@aria-placeholder,'SELECIONE O STATUS')]'.</msg>
<status status="PASS" starttime="20231201 15:51:45.406" endtime="20231201 15:51:45.700"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//li[contains(.,'Aceitos')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:45.701" level="INFO">Clicking element '//li[contains(.,'Aceitos')]'.</msg>
<status status="PASS" starttime="20231201 15:51:45.700" endtime="20231201 15:51:45.962"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${CAMPO_ID}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:45.963" level="INFO">Clicking element '//input[contains(@placeholder,'INFORME O ID')]'.</msg>
<status status="PASS" starttime="20231201 15:51:45.963" endtime="20231201 15:51:46.209"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:46.209" level="INFO">Clicking element '//button[contains(.,'Filtrar')]'.</msg>
<status status="PASS" starttime="20231201 15:51:46.209" endtime="20231201 15:51:46.454"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:51:47.457" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20231201 15:51:46.455" endtime="20231201 15:51:47.457"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Aceito</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:51:47.457" endtime="20231201 15:51:47.513"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:51:47.517" level="INFO">Clicking element '//button[contains(.,'Limpar')]'.</msg>
<status status="PASS" starttime="20231201 15:51:47.513" endtime="20231201 15:51:48.750"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=TesteLincoln</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:51:48.750" endtime="20231201 15:51:49.748"/>
</kw>
<status status="PASS" starttime="20231201 15:51:43.405" endtime="20231201 15:51:49.748"/>
</kw>
<kw name="Executar comando depois do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:49.750" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:49.748" endtime="20231201 15:51:49.846"/>
</kw>
<status status="PASS" starttime="20231201 15:51:49.748" endtime="20231201 15:51:49.846"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:49.846" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:51:49.848" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:49.846" endtime="20231201 15:51:49.848"/>
</kw>
<status status="PASS" starttime="20231201 15:51:49.748" endtime="20231201 15:51:49.848"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:49.848" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:49.848" endtime="20231201 15:51:49.922"/>
</kw>
<status status="PASS" starttime="20231201 15:51:49.848" endtime="20231201 15:51:49.922"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:49.922" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:51:49.926" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:49.922" endtime="20231201 15:51:49.926"/>
</kw>
<status status="PASS" starttime="20231201 15:51:49.848" endtime="20231201 15:51:49.926"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:51:49.926" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:51:49.926" endtime="20231201 15:51:50.002"/>
</kw>
<status status="PASS" starttime="20231201 15:51:49.926" endtime="20231201 15:51:50.002"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:51:50.002" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:51:50.018" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:51:50.002" endtime="20231201 15:51:50.018"/>
</kw>
<status status="PASS" starttime="20231201 15:51:49.926" endtime="20231201 15:51:50.018"/>
</kw>
<status status="PASS" starttime="20231201 15:51:49.748" endtime="20231201 15:51:50.018"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:51:50.019" endtime="20231201 15:51:53.375"/>
</kw>
<status status="PASS" starttime="20231201 15:51:50.019" endtime="20231201 15:51:53.375"/>
</kw>
<doc>Tela cadastro</doc>
<tag>status</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231201 15:51:23.277" endtime="20231201 15:51:53.375"/>
</test>
<test id="s1-t5" name="Caso de Teste 5: Testando todos os filtros: Filtro por Datas" line="49">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:51:53.375" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:51:53.375" endtime="20231201 15:52:02.098"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:52:02.098" endtime="20231201 15:52:02.100"/>
</kw>
<status status="PASS" starttime="20231201 15:51:53.375" endtime="20231201 15:52:02.100"/>
</kw>
<kw name="Executar comando antes do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:02.102" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:02.102" endtime="20231201 15:52:02.194"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.102" endtime="20231201 15:52:02.210"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:02.210" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:52:02.210" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:02.210" endtime="20231201 15:52:02.210"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.102" endtime="20231201 15:52:02.210"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:02.210" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:02.210" endtime="20231201 15:52:02.273"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.210" endtime="20231201 15:52:02.273"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:02.273" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:52:02.287" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:02.273" endtime="20231201 15:52:02.287"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.210" endtime="20231201 15:52:02.287"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:02.287" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:02.287" endtime="20231201 15:52:02.364"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.287" endtime="20231201 15:52:02.364"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:02.364" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:52:02.369" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:02.364" endtime="20231201 15:52:02.369"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.287" endtime="20231201 15:52:02.369"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:02.369" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:02.369" endtime="20231201 15:52:02.433"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.369" endtime="20231201 15:52:02.433"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:02.433" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:52:02.433" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:02.433" endtime="20231201 15:52:02.433"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.369" endtime="20231201 15:52:02.433"/>
</kw>
<kw name="Quando inserir Dados na tabela clientes" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:02.447" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:02.433" endtime="20231201 15:52:02.642"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.433" endtime="20231201 15:52:02.642"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:02.642" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231201 15:52:02.653" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:02.642" endtime="20231201 15:52:02.653"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.433" endtime="20231201 15:52:02.653"/>
</kw>
<kw name="Quando inserir dados na tabela partners" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:02.653" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:02.653" endtime="20231201 15:52:02.730"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.653" endtime="20231201 15:52:02.730"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:02.730" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072'); </msg>
<msg timestamp="20231201 15:52:02.750" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:02.730" endtime="20231201 15:52:02.750"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.653" endtime="20231201 15:52:02.750"/>
</kw>
<kw name="Quando inserir tabela partner_clients" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:02.751" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:02.751" endtime="20231201 15:52:02.827"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.751" endtime="20231201 15:52:02.827"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:02.827" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true'); </msg>
<msg timestamp="20231201 15:52:02.845" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:02.827" endtime="20231201 15:52:02.845"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.751" endtime="20231201 15:52:02.845"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.102" endtime="20231201 15:52:02.845"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:52:02.847" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:52:02.847" endtime="20231201 15:52:05.425"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:07.426" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:05.426" endtime="20231201 15:52:07.426"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:07.427" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:52:07.426" endtime="20231201 15:52:07.528"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:07.530" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:52:07.528" endtime="20231201 15:52:07.581"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:07.581" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:52:07.581" endtime="20231201 15:52:07.854"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:52:07.855" endtime="20231201 15:52:08.195"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:10.197" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:08.196" endtime="20231201 15:52:10.197"/>
</kw>
<status status="PASS" starttime="20231201 15:52:02.845" endtime="20231201 15:52:10.197"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:10.201" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:52:10.200" endtime="20231201 15:52:10.446"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:10.448" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:52:10.446" endtime="20231201 15:52:10.708"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:52:10.708" endtime="20231201 15:52:10.732"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:10.732" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:52:10.732" endtime="20231201 15:52:11.028"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:52:11.028" endtime="20231201 15:52:11.045"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:52:11.045" endtime="20231201 15:52:11.050"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:13.050" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:11.050" endtime="20231201 15:52:13.050"/>
</kw>
<status status="PASS" starttime="20231201 15:52:10.199" endtime="20231201 15:52:13.050"/>
</kw>
<kw name="E deve consegui filtrar por datas" library="resourcer_cadastro_clientes">
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:18.052" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231201 15:52:13.051" endtime="20231201 15:52:18.052"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${CAMPO_DATA_I}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:18.054" level="INFO">Clicking element '(//input[contains(@class,'reg')])[1]'.</msg>
<status status="PASS" starttime="20231201 15:52:18.052" endtime="20231201 15:52:18.437"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=(//div[contains(@class,'dp__month_year_select')])[1]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:18.437" level="INFO">Clicking element '(//div[contains(@class,'dp__month_year_select')])[1]'.</msg>
<status status="PASS" starttime="20231201 15:52:18.437" endtime="20231201 15:52:18.690"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//div[@class='dp__overlay_cell dp__overlay_cell_pad'][contains(.,'set.')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:18.690" level="INFO">Clicking element '//div[@class='dp__overlay_cell dp__overlay_cell_pad'][contains(.,'set.')]'.</msg>
<status status="PASS" starttime="20231201 15:52:18.690" endtime="20231201 15:52:18.956"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//div[@class='dp__cell_inner dp__pointer dp__date_hover'][contains(.,'24')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:18.958" level="INFO">Clicking element '//div[@class='dp__cell_inner dp__pointer dp__date_hover'][contains(.,'24')]'.</msg>
<status status="PASS" starttime="20231201 15:52:18.956" endtime="20231201 15:52:19.225"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${CAMPO_DATA_F}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:19.228" level="INFO">Clicking element '(//input[contains(@class,'reg')])[2]'.</msg>
<status status="PASS" starttime="20231201 15:52:19.226" endtime="20231201 15:52:19.518"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=(//div[contains(@class,'dp__month_year_select')])[1]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:19.518" level="INFO">Clicking element '(//div[contains(@class,'dp__month_year_select')])[1]'.</msg>
<status status="PASS" starttime="20231201 15:52:19.518" endtime="20231201 15:52:19.783"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//div[@class='dp__overlay_cell dp__overlay_cell_pad'][contains(.,'set.')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:19.784" level="INFO">Clicking element '//div[@class='dp__overlay_cell dp__overlay_cell_pad'][contains(.,'set.')]'.</msg>
<status status="PASS" starttime="20231201 15:52:19.783" endtime="20231201 15:52:20.049"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//div[@class='dp__cell_inner dp__pointer dp__date_hover'][contains(.,'24')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:20.055" level="INFO">Clicking element '//div[@class='dp__cell_inner dp__pointer dp__date_hover'][contains(.,'24')]'.</msg>
<status status="PASS" starttime="20231201 15:52:20.052" endtime="20231201 15:52:20.310"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:20.313" level="INFO">Clicking element '//button[contains(.,'Filtrar')]'.</msg>
<status status="PASS" starttime="20231201 15:52:20.313" endtime="20231201 15:52:20.577"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:22.577" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:20.577" endtime="20231201 15:52:22.577"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=24/09/2023</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:52:22.577" endtime="20231201 15:52:22.655"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:22.655" level="INFO">Clicking element '//button[contains(.,'Limpar')]'.</msg>
<status status="PASS" starttime="20231201 15:52:22.655" endtime="20231201 15:52:23.997"/>
</kw>
<kw name="Wait Until Page Does Not Contain" library="SeleniumLibrary">
<arg>text=24/09/2023</arg>
<doc>Waits until ``text`` disappears from the current page.</doc>
<status status="PASS" starttime="20231201 15:52:23.997" endtime="20231201 15:52:24.022"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:26.022" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:24.022" endtime="20231201 15:52:26.022"/>
</kw>
<status status="PASS" starttime="20231201 15:52:13.051" endtime="20231201 15:52:26.024"/>
</kw>
<kw name="Executar comando depois do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:26.029" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:26.027" endtime="20231201 15:52:26.182"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.026" endtime="20231201 15:52:26.182"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:26.182" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:52:26.185" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:26.182" endtime="20231201 15:52:26.185"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.025" endtime="20231201 15:52:26.185"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:26.187" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:26.186" endtime="20231201 15:52:26.259"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.186" endtime="20231201 15:52:26.259"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:26.260" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:52:26.263" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:26.259" endtime="20231201 15:52:26.263"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.186" endtime="20231201 15:52:26.263"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:26.265" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:26.265" endtime="20231201 15:52:26.333"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.264" endtime="20231201 15:52:26.333"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:52:26.333" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:52:26.354" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:52:26.333" endtime="20231201 15:52:26.354"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.264" endtime="20231201 15:52:26.354"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.024" endtime="20231201 15:52:26.354"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:52:26.356" endtime="20231201 15:52:29.634"/>
</kw>
<status status="PASS" starttime="20231201 15:52:26.354" endtime="20231201 15:52:29.634"/>
</kw>
<doc>Tela cadastro</doc>
<tag>datas</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231201 15:51:53.375" endtime="20231201 15:52:29.636"/>
</test>
<test id="s1-t6" name="Caso de Teste 6: Testar totalizadores" line="58">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:52:29.637" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:52:29.637" endtime="20231201 15:52:38.236"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:52:38.236" endtime="20231201 15:52:38.240"/>
</kw>
<status status="PASS" starttime="20231201 15:52:29.637" endtime="20231201 15:52:38.240"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:52:38.240" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:52:38.240" endtime="20231201 15:52:40.935"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:42.938" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:40.935" endtime="20231201 15:52:42.938"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:42.939" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:52:42.938" endtime="20231201 15:52:43.024"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:43.024" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:52:43.024" endtime="20231201 15:52:43.051"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:43.052" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:52:43.052" endtime="20231201 15:52:43.302"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:52:43.302" endtime="20231201 15:52:43.615"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:45.615" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:43.615" endtime="20231201 15:52:45.615"/>
</kw>
<status status="PASS" starttime="20231201 15:52:38.240" endtime="20231201 15:52:45.615"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:45.617" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:52:45.616" endtime="20231201 15:52:45.840"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:45.840" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:52:45.840" endtime="20231201 15:52:46.059"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:52:46.059" endtime="20231201 15:52:46.082"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:46.083" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:52:46.082" endtime="20231201 15:52:46.380"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:52:46.380" endtime="20231201 15:52:46.991"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:52:46.991" endtime="20231201 15:52:46.993"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:52:48.993" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:52:46.993" endtime="20231201 15:52:48.993"/>
</kw>
<status status="PASS" starttime="20231201 15:52:45.615" endtime="20231201 15:52:48.993"/>
</kw>
<kw name="Comparar Dados do Banco com totalizadores: Aceitos, Pendentes, N達o_validados e Declinados" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:52:48.997" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:52:48.997" endtime="20231201 15:52:49.145"/>
</kw>
<status status="PASS" starttime="20231201 15:52:48.993" endtime="20231201 15:52:49.145"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${aceitos}</var>
<arg>SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 3</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20231201 15:52:49.145" level="INFO">Executing : Query  |  SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 3 </msg>
<msg timestamp="20231201 15:52:49.152" level="INFO">${aceitos} = [(2750,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.145" endtime="20231201 15:52:49.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Total number of records:${aceitos}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.153" level="INFO">Total number of records:[(2750,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.152" endtime="20231201 15:52:49.153"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${Pendentes}</var>
<arg>SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 2</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20231201 15:52:49.153" level="INFO">Executing : Query  |  SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 2 </msg>
<msg timestamp="20231201 15:52:49.155" level="INFO">${Pendentes} = [(3,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.153" endtime="20231201 15:52:49.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Total number of records:${Pendentes}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.155" level="INFO">Total number of records:[(3,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.155" endtime="20231201 15:52:49.155"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${N達o_validados}</var>
<arg>SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20231201 15:52:49.155" level="INFO">Executing : Query  |  SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 1 </msg>
<msg timestamp="20231201 15:52:49.156" level="INFO">${N達o_validados} = [(2710,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.155" endtime="20231201 15:52:49.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Total number of records:${N達o_validados}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.157" level="INFO">Total number of records:[(2710,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.156" endtime="20231201 15:52:49.157"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${Declinados}</var>
<arg>SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 4</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20231201 15:52:49.157" level="INFO">Executing : Query  |  SELECT COUNT(*) FROM clients WHERE status_accreditation_id = 4 </msg>
<msg timestamp="20231201 15:52:49.160" level="INFO">${Declinados} = [(252,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.157" endtime="20231201 15:52:49.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Total number of records:${Declinados}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.160" level="INFO">Total number of records:[(252,)]</msg>
<status status="PASS" starttime="20231201 15:52:49.160" endtime="20231201 15:52:49.160"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${valor1}</var>
<arg>${aceitos}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20231201 15:52:49.160" level="INFO">${valor1} = (2750,)</msg>
<status status="PASS" starttime="20231201 15:52:49.160" endtime="20231201 15:52:49.160"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${numero1}</var>
<arg>${valor1[0]}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">${numero1} = 2750</msg>
<status status="PASS" starttime="20231201 15:52:49.160" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>N炭mero como inteiro:${numero1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">N炭mero como inteiro:2750</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${valor2}</var>
<arg>${Pendentes}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">${valor2} = (3,)</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${numero2}</var>
<arg>${valor2[0]}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">${numero2} = 3</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>N炭mero como inteiro:${numero2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">N炭mero como inteiro:3</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${valor3}</var>
<arg>${N達o_validados}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">${valor3} = (2710,)</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${numero3}</var>
<arg>${valor3[0]}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">${numero3} = 2710</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>N炭mero como inteiro:${numero3}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">N炭mero como inteiro:2710</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${valor4}</var>
<arg>${Declinados}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20231201 15:52:49.161" level="INFO">${valor4} = (252,)</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.161"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${numero4}</var>
<arg>${valor4[0]}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231201 15:52:49.165" level="INFO">${numero4} = 252</msg>
<status status="PASS" starttime="20231201 15:52:49.161" endtime="20231201 15:52:49.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>N炭mero como inteiro:${numero4}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:52:49.165" level="INFO">N炭mero como inteiro:252</msg>
<status status="PASS" starttime="20231201 15:52:49.165" endtime="20231201 15:52:49.165"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${dynamic_number1}</var>
<arg>(//h2[contains(@class,'fw-bold text-center text-black')])[1]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:49.189" level="INFO">${dynamic_number1} = 2750</msg>
<status status="PASS" starttime="20231201 15:52:49.165" endtime="20231201 15:52:49.189"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_number1}</var>
<arg>${numero1}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231201 15:52:49.189" level="INFO">${expected_number1} = 2750</msg>
<status status="PASS" starttime="20231201 15:52:49.189" endtime="20231201 15:52:49.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${dynamic_number1}</arg>
<arg>${expected_number1}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231201 15:52:49.189" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20231201 15:52:49.189" endtime="20231201 15:52:49.189"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${dynamic_number2}</var>
<arg>(//h2[contains(@class,'fw-bold text-center text-black')])[2]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:49.199" level="INFO">${dynamic_number2} = 3</msg>
<status status="PASS" starttime="20231201 15:52:49.189" endtime="20231201 15:52:49.199"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_number2}</var>
<arg>${numero2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231201 15:52:49.199" level="INFO">${expected_number2} = 3</msg>
<status status="PASS" starttime="20231201 15:52:49.199" endtime="20231201 15:52:49.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${dynamic_number2}</arg>
<arg>${expected_number2}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231201 15:52:49.199" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20231201 15:52:49.199" endtime="20231201 15:52:49.199"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${dynamic_number3}</var>
<arg>(//h2[contains(@class,'fw-bold text-center text-black')])[3]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:49.208" level="INFO">${dynamic_number3} = 2710</msg>
<status status="PASS" starttime="20231201 15:52:49.199" endtime="20231201 15:52:49.208"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_number3}</var>
<arg>${numero3}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231201 15:52:49.209" level="INFO">${expected_number3} = 2710</msg>
<status status="PASS" starttime="20231201 15:52:49.208" endtime="20231201 15:52:49.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${dynamic_number3}</arg>
<arg>${expected_number3}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231201 15:52:49.209" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20231201 15:52:49.209" endtime="20231201 15:52:49.209"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${dynamic_number4}</var>
<arg>(//h2[contains(@class,'fw-bold text-center text-black')])[4]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:52:49.217" level="INFO">${dynamic_number4} = 252</msg>
<status status="PASS" starttime="20231201 15:52:49.210" endtime="20231201 15:52:49.217"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_number4}</var>
<arg>${numero4}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231201 15:52:49.217" level="INFO">${expected_number4} = 252</msg>
<status status="PASS" starttime="20231201 15:52:49.217" endtime="20231201 15:52:49.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${dynamic_number4}</arg>
<arg>${expected_number4}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231201 15:52:49.218" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'int'&gt;</msg>
<status status="PASS" starttime="20231201 15:52:49.217" endtime="20231201 15:52:49.218"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>message= Valores do banco est但o igual aos totalizadores!</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20231201 15:52:49.218" level="INFO">Execution passed with message:
Valores do banco est但o igual aos totalizadores!</msg>
<status status="PASS" starttime="20231201 15:52:49.218" endtime="20231201 15:52:49.218"/>
</kw>
<status status="PASS" starttime="20231201 15:52:48.993" endtime="20231201 15:52:49.218"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:52:49.218" endtime="20231201 15:52:52.455"/>
</kw>
<status status="PASS" starttime="20231201 15:52:49.218" endtime="20231201 15:52:52.455"/>
</kw>
<doc>Tela cadastro</doc>
<tag>todos_cadastro_Clientes</tag>
<tag>total</tag>
<status status="PASS" starttime="20231201 15:52:29.637" endtime="20231201 15:52:52.462">Valores do banco est但o igual aos totalizadores!</status>
</test>
<test id="s1-t7" name="Caso de Teste 7: Teste exportar arquivo excel" line="65">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:52:52.465" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:52:52.465" endtime="20231201 15:53:01.007"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:53:01.007" endtime="20231201 15:53:01.009"/>
</kw>
<status status="PASS" starttime="20231201 15:52:52.465" endtime="20231201 15:53:01.009"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:53:01.009" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:53:01.009" endtime="20231201 15:53:03.369"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:05.370" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:53:03.369" endtime="20231201 15:53:05.370"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:05.370" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:53:05.370" endtime="20231201 15:53:05.477"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:05.477" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:53:05.477" endtime="20231201 15:53:05.509"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:05.509" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:53:05.509" endtime="20231201 15:53:05.747"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:53:05.747" endtime="20231201 15:53:06.021"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:08.022" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:53:06.022" endtime="20231201 15:53:08.022"/>
</kw>
<status status="PASS" starttime="20231201 15:53:01.009" endtime="20231201 15:53:08.022"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:08.024" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:53:08.022" endtime="20231201 15:53:08.250"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:08.250" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:53:08.250" endtime="20231201 15:53:08.469"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:53:08.469" endtime="20231201 15:53:08.492"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:08.493" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:53:08.492" endtime="20231201 15:53:08.777"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:53:08.777" endtime="20231201 15:53:09.399"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:53:09.399" endtime="20231201 15:53:09.401"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:11.401" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:53:09.401" endtime="20231201 15:53:11.401"/>
</kw>
<status status="PASS" starttime="20231201 15:53:08.022" endtime="20231201 15:53:11.401"/>
</kw>
<kw name="Ent達o deve consegui exporta arquivo" library="resourcer_cadastro_clientes">
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:13.403" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:53:11.402" endtime="20231201 15:53:13.403"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${EXPORTAR_EXCEL}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:13.403" level="INFO">Clicking element '//button[contains(.,'Exportar')]'.</msg>
<status status="PASS" starttime="20231201 15:53:13.403" endtime="20231201 15:53:13.697"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:14.698" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20231201 15:53:13.697" endtime="20231201 15:53:14.698"/>
</kw>
<kw name="Run Process" library="Process">
<var>${status1}</var>
<arg>python</arg>
<arg>excel.py</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231201 15:53:14.698" level="INFO">Starting process:
python excel.py</msg>
<msg timestamp="20231201 15:53:14.731" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231201 15:53:14.783" level="INFO">Process completed.</msg>
<msg timestamp="20231201 15:53:14.783" level="INFO">${status1} = &lt;result object with rc 2&gt;</msg>
<status status="PASS" starttime="20231201 15:53:14.698" endtime="20231201 15:53:14.783"/>
</kw>
<kw name="Should Exist" library="OperatingSystem">
<var>${status2}</var>
<arg>${ARQUIVO_PATH}</arg>
<doc>Fails unless the given path (file or directory) exists.</doc>
<msg timestamp="20231201 15:53:14.783" level="INFO" html="true">Path '&lt;a href="file://C:\Users\quems\Downloads\clientes.xlsx"&gt;C:\Users\quems\Downloads\clientes.xlsx&lt;/a&gt;' exists.</msg>
<msg timestamp="20231201 15:53:14.783" level="INFO">${status2} = None</msg>
<status status="PASS" starttime="20231201 15:53:14.783" endtime="20231201 15:53:14.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>O arquivo clients.xlsx existe na pasta</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231201 15:53:14.784" level="INFO">O arquivo clients.xlsx existe na pasta</msg>
<status status="PASS" starttime="20231201 15:53:14.784" endtime="20231201 15:53:14.784"/>
</kw>
<kw name="Remove File" library="OperatingSystem">
<arg>${ARQUIVO_PATH}</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20231201 15:53:14.793" level="INFO" html="true">Removed file '&lt;a href="file://C:\Users\quems\Downloads\clientes.xlsx"&gt;C:\Users\quems\Downloads\clientes.xlsx&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231201 15:53:14.784" endtime="20231201 15:53:14.793"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${ARQUIVO_PATH}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20231201 15:53:14.793" level="INFO" html="true">File '&lt;a href="file://C:\Users\quems\Downloads\clientes.xlsx"&gt;C:\Users\quems\Downloads\clientes.xlsx&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20231201 15:53:14.793" endtime="20231201 15:53:14.793"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:17.793" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20231201 15:53:14.793" endtime="20231201 15:53:17.793"/>
</kw>
<status status="PASS" starttime="20231201 15:53:11.402" endtime="20231201 15:53:17.793"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:53:17.793" endtime="20231201 15:53:21.147"/>
</kw>
<status status="PASS" starttime="20231201 15:53:17.793" endtime="20231201 15:53:21.147"/>
</kw>
<doc>Tela cadastro</doc>
<tag>arquivo</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231201 15:52:52.464" endtime="20231201 15:53:21.147"/>
</test>
<test id="s1-t8" name="Caso de Teste 8: Testando todos os filtros: Filtro por parceiro" line="72">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=firefox</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231201 15:53:21.150" level="INFO">Opening browser 'firefox' to base url 'None'.</msg>
<status status="PASS" starttime="20231201 15:53:21.150" endtime="20231201 15:53:29.105"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231201 15:53:29.105" endtime="20231201 15:53:29.117"/>
</kw>
<status status="PASS" starttime="20231201 15:53:21.150" endtime="20231201 15:53:29.117"/>
</kw>
<kw name="Executar comando antes do teste" library="resourcer_cadastro_clientes">
<kw name="Ent達o deletar partner_clients" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:53:29.119" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:53:29.119" endtime="20231201 15:53:29.205"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.119" endtime="20231201 15:53:29.205"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partner_clients WHERE id=100000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:53:29.205" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partner_clients WHERE id=100000 </msg>
<msg timestamp="20231201 15:53:29.212" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:53:29.205" endtime="20231201 15:53:29.212"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.119" endtime="20231201 15:53:29.212"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:53:29.214" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:53:29.212" endtime="20231201 15:53:29.284"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.212" endtime="20231201 15:53:29.284"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:53:29.284" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:53:29.284" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:53:29.284" endtime="20231201 15:53:29.284"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.212" endtime="20231201 15:53:29.284"/>
</kw>
<kw name="Ent達o deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:53:29.284" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:53:29.284" endtime="20231201 15:53:29.346"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.284" endtime="20231201 15:53:29.346"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=50000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:53:29.346" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=50000 </msg>
<msg timestamp="20231201 15:53:29.363" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:53:29.346" endtime="20231201 15:53:29.363"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.284" endtime="20231201 15:53:29.363"/>
</kw>
<kw name="Ent達o deletar partners" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:53:29.363" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:53:29.363" endtime="20231201 15:53:29.439"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.363" endtime="20231201 15:53:29.439"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.partners WHERE id=70000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:53:29.439" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.partners WHERE id=70000 </msg>
<msg timestamp="20231201 15:53:29.442" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:53:29.439" endtime="20231201 15:53:29.442"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.363" endtime="20231201 15:53:29.442"/>
</kw>
<kw name="Quando inserir Dados na tabela clientes" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:53:29.443" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:53:29.443" endtime="20231201 15:53:29.555"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.442" endtime="20231201 15:53:29.555"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:53:29.555" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(50000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231201 15:53:29.558" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:53:29.555" endtime="20231201 15:53:29.558"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.442" endtime="20231201 15:53:29.558"/>
</kw>
<kw name="Quando inserir dados na tabela partners" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:53:29.564" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:53:29.558" endtime="20231201 15:53:29.633"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.558" endtime="20231201 15:53:29.633"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:53:29.633" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partners(id, social_reason, fantasy, cpf_cnpj, email, phone_number, active, created_at, updated_at) VALUES (70000, 'EMPRESA_TESTE', 'LOJA_TESTE', '03260703388', 'LOJA_TESTE1@GMAIL.COM', '985763057', TRUE, '2023-09-01 09:37:29.933072', '2023-09-01 09:37:29.933072'); </msg>
<msg timestamp="20231201 15:53:29.648" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:53:29.633" endtime="20231201 15:53:29.648"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.558" endtime="20231201 15:53:29.648"/>
</kw>
<kw name="Quando inserir tabela partner_clients" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231201 15:53:29.649" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231201 15:53:29.648" endtime="20231201 15:53:29.721"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.648" endtime="20231201 15:53:29.721"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true');</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231201 15:53:29.721" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.partner_clients(id, partner_id, client_email, client_id, created_at, updated_at, active) VALUES (100000, 70000, 'teste_partner@gmail.com', '50000', '0001-01-01 00:00:00', '0001-01-01 00:00:00', 'true'); </msg>
<msg timestamp="20231201 15:53:29.727" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231201 15:53:29.721" endtime="20231201 15:53:29.727"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.648" endtime="20231201 15:53:29.727"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.117" endtime="20231201 15:53:29.727"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231201 15:53:29.727" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231201 15:53:29.727" endtime="20231201 15:53:32.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:34.360" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:53:32.360" endtime="20231201 15:53:34.360"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:34.360" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231201 15:53:34.360" endtime="20231201 15:53:34.483"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:34.486" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231201 15:53:34.486" endtime="20231201 15:53:34.505"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:34.505" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231201 15:53:34.505" endtime="20231201 15:53:34.738"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:53:34.738" endtime="20231201 15:53:35.051"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:37.053" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:53:35.051" endtime="20231201 15:53:37.053"/>
</kw>
<status status="PASS" starttime="20231201 15:53:29.727" endtime="20231201 15:53:37.053"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${OPEN/CLOSE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:37.053" level="INFO">Clicking element '//img[contains(@alt,'Open/Close')]'.</msg>
<status status="PASS" starttime="20231201 15:53:37.053" endtime="20231201 15:53:37.288"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:37.291" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231201 15:53:37.290" endtime="20231201 15:53:37.543"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:53:37.543" endtime="20231201 15:53:37.574"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:37.575" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231201 15:53:37.575" endtime="20231201 15:53:37.866"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231201 15:53:37.866" endtime="20231201 15:53:38.547"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231201 15:53:38.547" endtime="20231201 15:53:38.551"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231201 15:53:40.551" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231201 15:53:38.551" endtime="20231201 15:53:40.551"/>
</kw>
<status status="PASS" starttime="20231201 15:53:37.053" endtime="20231201 15:53:40.551"/>
</kw>
<kw name="E deve consegui filtrar por parceiro" library="resourcer_cadastro_clientes">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${CAMPO_PARCEIRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:40.554" level="INFO">Clicking element '//input[contains(@aria-placeholder,'SELECIONE O PARCEIRO')]'.</msg>
<status status="PASS" starttime="20231201 15:53:40.554" endtime="20231201 15:53:40.832"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIST_LOJATESTE}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:40.834" level="INFO">Clicking element '//li[contains(.,'LOJA_TESTE')]'.</msg>
<status status="PASS" starttime="20231201 15:53:40.833" endtime="20231201 15:53:41.087"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231201 15:53:41.087" level="INFO">Clicking element '//button[contains(.,'Filtrar')]'.</msg>
<status status="PASS" starttime="20231201 15:53:41.087" endtime="20231201 15:53:41.333"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//td[contains(.,'LOJA_TESTE')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231201 15:53:41.333" endtime="20231201 15:53:41.359"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>//td[contains(.,'LOJA_TESTE')]</arg>
<arg>LOJA_TESTE</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20231201 15:53:41.360" level="INFO">Verifying element '//td[contains(.,'LOJA_TESTE')]' contains exact text 'LOJA_TESTE'.</msg>
<status status="PASS" starttime="20231201 15:53:41.359" endtime="20231201 15:53:41.383"/>
</kw>
<status status="PASS" starttime="20231201 15:53:40.551" endtime="20231201 15:53:41.383"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231201 15:53:41.383" endtime="20231201 15:53:44.723"/>
</kw>
<status status="PASS" starttime="20231201 15:53:41.383" endtime="20231201 15:53:44.724"/>
</kw>
<doc>Tela cadastro</doc>
<tag>parceiros</tag>
<tag>todos_cadastro_Clientes</tag>
<status status="PASS" starttime="20231201 15:53:21.148" endtime="20231201 15:53:44.724"/>
</test>
<status status="PASS" starttime="20231201 15:49:52.503" endtime="20231201 15:53:44.724"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">arquivo</stat>
<stat pass="1" fail="0" skip="0">clientes</stat>
<stat pass="1" fail="0" skip="0">cpf</stat>
<stat pass="1" fail="0" skip="0">datas</stat>
<stat pass="1" fail="0" skip="0">id</stat>
<stat pass="1" fail="0" skip="0">parceiros</stat>
<stat pass="1" fail="0" skip="0">status</stat>
<stat pass="8" fail="0" skip="0">todos_cadastro_Clientes</stat>
<stat pass="1" fail="0" skip="0">total</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Teste Cadastro Clientes">Teste Cadastro Clientes</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
