<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.3 on win32)" generated="20231006 17:44:02.547" rpa="false" schemaversion="4">
<suite id="s1" name="Cadastro" source="C:\Users\quems\Desktop\Fixpay_projetos_atualizados\portal-intranet\test_robot_framework\Cadastro">
<suite id="s1-s1" name="Cadastro Clientes" source="C:\Users\quems\Desktop\Fixpay_projetos_atualizados\portal-intranet\test_robot_framework\Cadastro\cadastro_clientes.robot">
<test id="s1-s1-t1" name="Caso de Teste 1: Testando todos os filtros: Aba Aceitos - Fazer filtro por ID" line="10">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=chrome</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231006 17:44:02.726" level="INFO">Opening browser 'chrome' to base url 'None'.</msg>
<status status="PASS" starttime="20231006 17:44:02.726" endtime="20231006 17:44:05.796"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231006 17:44:05.796" endtime="20231006 17:44:05.917"/>
</kw>
<status status="PASS" starttime="20231006 17:44:02.726" endtime="20231006 17:44:05.917"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231006 17:44:05.919" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231006 17:44:05.918" endtime="20231006 17:44:07.254"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:44:09.256" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231006 17:44:07.254" endtime="20231006 17:44:09.256"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:09.256" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231006 17:44:09.256" endtime="20231006 17:44:09.432"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:09.432" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231006 17:44:09.432" endtime="20231006 17:44:09.535"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:09.537" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231006 17:44:09.535" endtime="20231006 17:44:09.600"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:44:09.600" endtime="20231006 17:44:10.776"/>
</kw>
<status status="PASS" starttime="20231006 17:44:05.918" endtime="20231006 17:44:10.776"/>
</kw>
<kw name="Inserir Dados no Banco" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231006 17:44:10.790" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231006 17:44:10.778" endtime="20231006 17:44:10.956"/>
</kw>
<status status="PASS" starttime="20231006 17:44:10.778" endtime="20231006 17:44:10.956"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(3000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231006 17:44:10.956" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(3000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231006 17:44:10.966" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231006 17:44:10.956" endtime="20231006 17:44:10.966"/>
</kw>
<status status="PASS" starttime="20231006 17:44:10.778" endtime="20231006 17:44:10.966"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:10.966" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231006 17:44:10.966" endtime="20231006 17:44:11.020"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:44:11.020" endtime="20231006 17:44:11.291"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:11.291" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231006 17:44:11.291" endtime="20231006 17:44:11.421"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:44:11.421" endtime="20231006 17:44:11.446"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231006 17:44:11.446" endtime="20231006 17:44:11.452"/>
</kw>
<status status="PASS" starttime="20231006 17:44:10.966" endtime="20231006 17:44:11.452"/>
</kw>
<kw name="E deve consegui filtrar por id" library="cadastro_clientes_resourcer">
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:44:16.453" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231006 17:44:11.453" endtime="20231006 17:44:16.453"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=${CAMPO_ID}</arg>
<arg>text=3000</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:16.456" level="INFO">Typing text '3000' into text field '//input[contains(@class,'form-control input input')]'.</msg>
<status status="PASS" starttime="20231006 17:44:16.453" endtime="20231006 17:44:16.601"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:16.603" level="INFO">Clicking element '//button[contains(@id,'aplicar-filtro')]'.</msg>
<status status="PASS" starttime="20231006 17:44:16.601" endtime="20231006 17:44:16.753"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=3000</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:44:16.753" endtime="20231006 17:44:16.796"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:16.796" level="INFO">Clicking element '//button[contains(@id,'limpar-filtros')]'.</msg>
<status status="PASS" starttime="20231006 17:44:16.796" endtime="20231006 17:44:16.869"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//span[contains(.,'2557')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:44:16.869" endtime="20231006 17:44:21.840"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:44:23.841" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231006 17:44:21.840" endtime="20231006 17:44:23.841"/>
</kw>
<status status="PASS" starttime="20231006 17:44:11.453" endtime="20231006 17:44:23.841"/>
</kw>
<kw name="Deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231006 17:44:23.842" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231006 17:44:23.842" endtime="20231006 17:44:23.990"/>
</kw>
<status status="PASS" starttime="20231006 17:44:23.842" endtime="20231006 17:44:23.990"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=3000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231006 17:44:23.990" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=3000 </msg>
<msg timestamp="20231006 17:44:24.005" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231006 17:44:23.990" endtime="20231006 17:44:24.005"/>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.
By default it's not an error if there was no open database connection -
suitable for usage as a teardown.
However you can enforce it using the `error_if_no_connection` parameter.</doc>
<msg timestamp="20231006 17:44:24.005" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20231006 17:44:24.005" endtime="20231006 17:44:24.008"/>
</kw>
<status status="PASS" starttime="20231006 17:44:23.841" endtime="20231006 17:44:24.008"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231006 17:44:24.008" endtime="20231006 17:44:26.254"/>
</kw>
<status status="PASS" starttime="20231006 17:44:24.008" endtime="20231006 17:44:26.254"/>
</kw>
<tag>id</tag>
<tag>todos</tag>
<status status="PASS" starttime="20231006 17:44:02.723" endtime="20231006 17:44:26.257"/>
</test>
<test id="s1-s1-t2" name="Caso de Teste 2: Testando todos os filtros: Aba Aceitos - Fazer filtro por Clientes" line="18">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=chrome</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231006 17:44:26.257" level="INFO">Opening browser 'chrome' to base url 'None'.</msg>
<status status="PASS" starttime="20231006 17:44:26.257" endtime="20231006 17:44:29.339"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231006 17:44:29.339" endtime="20231006 17:44:29.465"/>
</kw>
<status status="PASS" starttime="20231006 17:44:26.257" endtime="20231006 17:44:29.465"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231006 17:44:29.466" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231006 17:44:29.466" endtime="20231006 17:44:30.927"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:44:32.928" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231006 17:44:30.928" endtime="20231006 17:44:32.928"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:32.928" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231006 17:44:32.928" endtime="20231006 17:44:33.115"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:33.116" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231006 17:44:33.116" endtime="20231006 17:44:33.206"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:33.208" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231006 17:44:33.208" endtime="20231006 17:44:33.265"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:44:33.265" endtime="20231006 17:44:34.221"/>
</kw>
<status status="PASS" starttime="20231006 17:44:29.466" endtime="20231006 17:44:34.221"/>
</kw>
<kw name="Inserir Dados no Banco" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231006 17:44:34.222" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231006 17:44:34.221" endtime="20231006 17:44:34.359"/>
</kw>
<status status="PASS" starttime="20231006 17:44:34.221" endtime="20231006 17:44:34.359"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(3000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231006 17:44:34.359" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(3000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231006 17:44:34.359" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231006 17:44:34.359" endtime="20231006 17:44:34.359"/>
</kw>
<status status="PASS" starttime="20231006 17:44:34.221" endtime="20231006 17:44:34.359"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:34.359" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231006 17:44:34.359" endtime="20231006 17:44:34.431"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:44:34.431" endtime="20231006 17:44:34.696"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:34.699" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231006 17:44:34.699" endtime="20231006 17:44:34.825"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:44:34.826" endtime="20231006 17:44:34.849"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231006 17:44:34.849" endtime="20231006 17:44:34.855"/>
</kw>
<status status="PASS" starttime="20231006 17:44:34.359" endtime="20231006 17:44:34.855"/>
</kw>
<kw name="E deve consegui filtrar por cliente" library="cadastro_clientes_resourcer">
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:44:39.856" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231006 17:44:34.856" endtime="20231006 17:44:39.856"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${CAMPO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:39.856" level="INFO">Clicking element '//input[contains(@aria-controls,'search-client-multiselect-options')]'.</msg>
<status status="PASS" starttime="20231006 17:44:39.856" endtime="20231006 17:44:40.053"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>id=search-client-multiselect-option-teste</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:44:40.053" endtime="20231006 17:44:40.078"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id=search-client-multiselect-option-teste</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:40.078" level="INFO">Clicking element 'id=search-client-multiselect-option-teste'.</msg>
<status status="PASS" starttime="20231006 17:44:40.078" endtime="20231006 17:44:40.362"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:40.363" level="INFO">Clicking element '//button[contains(@id,'aplicar-filtro')]'.</msg>
<status status="PASS" starttime="20231006 17:44:40.362" endtime="20231006 17:44:40.487"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>//td[contains(.,'TesteLincoln')]</arg>
<arg>TESTELINCOLN</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20231006 17:44:40.488" level="INFO">Verifying element '//td[contains(.,'TesteLincoln')]' contains exact text 'TESTELINCOLN'.</msg>
<status status="PASS" starttime="20231006 17:44:40.488" endtime="20231006 17:44:40.527"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:40.527" level="INFO">Clicking element '//button[contains(@id,'limpar-filtros')]'.</msg>
<status status="PASS" starttime="20231006 17:44:40.527" endtime="20231006 17:44:40.604"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//span[contains(.,'2557')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:44:40.604" endtime="20231006 17:44:45.414"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:44:47.414" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231006 17:44:45.414" endtime="20231006 17:44:47.414"/>
</kw>
<status status="PASS" starttime="20231006 17:44:34.856" endtime="20231006 17:44:47.414"/>
</kw>
<kw name="Deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231006 17:44:47.414" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231006 17:44:47.414" endtime="20231006 17:44:47.541"/>
</kw>
<status status="PASS" starttime="20231006 17:44:47.414" endtime="20231006 17:44:47.541"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=3000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231006 17:44:47.541" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=3000 </msg>
<msg timestamp="20231006 17:44:47.546" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231006 17:44:47.541" endtime="20231006 17:44:47.546"/>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.
By default it's not an error if there was no open database connection -
suitable for usage as a teardown.
However you can enforce it using the `error_if_no_connection` parameter.</doc>
<msg timestamp="20231006 17:44:47.546" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20231006 17:44:47.546" endtime="20231006 17:44:47.546"/>
</kw>
<status status="PASS" starttime="20231006 17:44:47.414" endtime="20231006 17:44:47.555"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231006 17:44:47.555" endtime="20231006 17:44:49.840"/>
</kw>
<status status="PASS" starttime="20231006 17:44:47.555" endtime="20231006 17:44:49.841"/>
</kw>
<tag>clientes</tag>
<tag>todos</tag>
<status status="PASS" starttime="20231006 17:44:26.257" endtime="20231006 17:44:49.841"/>
</test>
<test id="s1-s1-t3" name="Caso de Teste 3: Testando todos os filtros: Aba Aceitos - Fazer filtro por CPF" line="25">
<kw name="Abrir Site intranet" library="location" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>browser=chrome</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20231006 17:44:49.847" level="INFO">Opening browser 'chrome' to base url 'None'.</msg>
<status status="PASS" starttime="20231006 17:44:49.847" endtime="20231006 17:44:52.988"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20231006 17:44:52.988" endtime="20231006 17:44:53.115"/>
</kw>
<status status="PASS" starttime="20231006 17:44:49.847" endtime="20231006 17:44:53.115"/>
</kw>
<kw name="Dado fazendo login" library="location">
<kw name="Go To" library="SeleniumLibrary">
<arg>url=${URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20231006 17:44:53.115" level="INFO">Opening url 'http://localhost:8080/auth/login'</msg>
<status status="PASS" starttime="20231006 17:44:53.115" endtime="20231006 17:44:54.569"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:44:56.569" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231006 17:44:54.569" endtime="20231006 17:44:56.569"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'text')]</arg>
<arg>text=RAFAEL.PINHEIRO@FIXPAY.COM.BR</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:56.570" level="INFO">Typing text 'RAFAEL.PINHEIRO@FIXPAY.COM.BR' into text field '//input[contains(@type,'text')]'.</msg>
<status status="PASS" starttime="20231006 17:44:56.569" endtime="20231006 17:44:56.745"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>locator=//input[contains(@type,'password')]</arg>
<arg>text=123456</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:56.746" level="INFO">Typing text '123456' into text field '//input[contains(@type,'password')]'.</msg>
<status status="PASS" starttime="20231006 17:44:56.746" endtime="20231006 17:44:56.848"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:56.848" level="INFO">Clicking element '//button[@class='btn btn-primary w-100 fw-semibold'][contains(.,'Entrar')]'.</msg>
<status status="PASS" starttime="20231006 17:44:56.848" endtime="20231006 17:44:56.906"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:44:56.907" endtime="20231006 17:44:57.837"/>
</kw>
<status status="PASS" starttime="20231006 17:44:53.115" endtime="20231006 17:44:57.837"/>
</kw>
<kw name="Inserir Dados no Banco" library="banco">
<doc>Insere dados na tabela de exemplo.</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231006 17:44:57.838" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231006 17:44:57.838" endtime="20231006 17:44:57.994"/>
</kw>
<status status="PASS" starttime="20231006 17:44:57.838" endtime="20231006 17:44:57.994"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(3000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231006 17:44:57.994" level="INFO">Executing : Execute SQL String  |  INSERT INTO public.clients (id, cpf_cnpj, social_reason, fantasy, contact_name, email, active, phone_number, address_id, group_id, establishment_id, created_at, updated_at, status_caf, status_accreditation_id) VALUES(3000,032607033821,'TesteLincoln','teste', 'teste','teste@gmail.com', true,85985763075, 1, 1, 1, '2023-09-24', '2023-09-24' , 'APPROVED', 3) </msg>
<msg timestamp="20231006 17:44:57.994" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231006 17:44:57.994" endtime="20231006 17:44:57.994"/>
</kw>
<status status="PASS" starttime="20231006 17:44:57.838" endtime="20231006 17:44:57.994"/>
</kw>
<kw name="Quando entrar na tela cadastro_clientes" library="location">
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${SIDEBAR_CADASTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:57.994" level="INFO">Clicking element '//span[contains(.,'Cadastros')]'.</msg>
<status status="PASS" starttime="20231006 17:44:57.994" endtime="20231006 17:44:58.064"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:44:58.064" endtime="20231006 17:44:58.316"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${SIDEBAR_CADASTRO_CLIENTES}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:44:58.316" level="INFO">Clicking element 'class=text-itens-sidebar'.</msg>
<status status="PASS" starttime="20231006 17:44:58.316" endtime="20231006 17:44:58.461"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=Bem-vindo ao intranet do Parcelaconta, RAFAEL PINHEIRO!</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:44:58.462" endtime="20231006 17:44:58.481"/>
</kw>
<kw name="Wait Until Location Is" library="SeleniumLibrary">
<arg>expected=${URL_CADASTRO}</arg>
<doc>Waits until the current URL is ``expected``.</doc>
<status status="PASS" starttime="20231006 17:44:58.481" endtime="20231006 17:44:58.493"/>
</kw>
<status status="PASS" starttime="20231006 17:44:57.994" endtime="20231006 17:44:58.493"/>
</kw>
<kw name="E deve consegui filtrar por cpf" library="cadastro_clientes_resourcer">
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:45:03.494" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20231006 17:44:58.494" endtime="20231006 17:45:03.494"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${CAMPO_CPF}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:45:03.494" level="INFO">Clicking element '//input[contains(@aria-controls,'search-cpf-multiselect-options')]'.</msg>
<status status="PASS" starttime="20231006 17:45:03.494" endtime="20231006 17:45:03.754"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>id=search-cpf-multiselect-option-326.070.338-21</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:45:03.754" endtime="20231006 17:45:03.775"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id=search-cpf-multiselect-option-326.070.338-21</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:45:03.775" level="INFO">Clicking element 'id=search-cpf-multiselect-option-326.070.338-21'.</msg>
<status status="PASS" starttime="20231006 17:45:03.775" endtime="20231006 17:45:04.291"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${APLICAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:45:04.292" level="INFO">Clicking element '//button[contains(@id,'aplicar-filtro')]'.</msg>
<status status="PASS" starttime="20231006 17:45:04.291" endtime="20231006 17:45:04.415"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>//td[contains(.,'TesteLincoln')]</arg>
<arg>TESTELINCOLN</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20231006 17:45:04.415" level="INFO">Verifying element '//td[contains(.,'TesteLincoln')]' contains exact text 'TESTELINCOLN'.</msg>
<status status="PASS" starttime="20231006 17:45:04.415" endtime="20231006 17:45:04.452"/>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<arg>text=421.669.263-04</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="PASS" starttime="20231006 17:45:04.452" endtime="20231006 17:45:04.475"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>locator=${LIMPAR_FILTRO}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20231006 17:45:04.483" level="INFO">Clicking element '//button[contains(@id,'limpar-filtros')]'.</msg>
<status status="PASS" starttime="20231006 17:45:04.475" endtime="20231006 17:45:04.555"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>locator=//span[contains(.,'2555')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20231006 17:45:04.555" endtime="20231006 17:45:09.459"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231006 17:45:11.461" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20231006 17:45:09.460" endtime="20231006 17:45:11.461"/>
</kw>
<status status="PASS" starttime="20231006 17:44:58.493" endtime="20231006 17:45:11.461"/>
</kw>
<kw name="Deletar cliente" library="banco">
<doc>Deleta dados</doc>
<kw name="Conectar ao Banco de Dados" library="banco">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>${DB_DRIVER}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20231006 17:45:11.465" level="INFO">Connecting using : psycopg2.connect(database=parcelaconta_development, user=postgres, password=***, host=localhost, port=5432) </msg>
<status status="PASS" starttime="20231006 17:45:11.461" endtime="20231006 17:45:11.654"/>
</kw>
<status status="PASS" starttime="20231006 17:45:11.461" endtime="20231006 17:45:11.654"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${result}</var>
<arg>DELETE FROM public.clients WHERE id=3000</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231006 17:45:11.654" level="INFO">Executing : Execute SQL String  |  DELETE FROM public.clients WHERE id=3000 </msg>
<msg timestamp="20231006 17:45:11.669" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20231006 17:45:11.654" endtime="20231006 17:45:11.669"/>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.
By default it's not an error if there was no open database connection -
suitable for usage as a teardown.
However you can enforce it using the `error_if_no_connection` parameter.</doc>
<msg timestamp="20231006 17:45:11.669" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20231006 17:45:11.669" endtime="20231006 17:45:11.669"/>
</kw>
<status status="PASS" starttime="20231006 17:45:11.461" endtime="20231006 17:45:11.669"/>
</kw>
<kw name="Fechar o navegador" library="location" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20231006 17:45:11.669" endtime="20231006 17:45:13.916"/>
</kw>
<status status="PASS" starttime="20231006 17:45:11.669" endtime="20231006 17:45:13.916"/>
</kw>
<tag>cpf</tag>
<tag>todos</tag>
<status status="PASS" starttime="20231006 17:44:49.844" endtime="20231006 17:45:13.918"/>
</test>
<status status="PASS" starttime="20231006 17:44:02.565" endtime="20231006 17:45:13.918"/>
</suite>
<status status="PASS" starttime="20231006 17:44:02.550" endtime="20231006 17:45:13.918"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">clientes</stat>
<stat pass="1" fail="0" skip="0">cpf</stat>
<stat pass="1" fail="0" skip="0">id</stat>
<stat pass="3" fail="0" skip="0">todos</stat>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Cadastro">Cadastro</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Cadastro Clientes">Cadastro.Cadastro Clientes</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
